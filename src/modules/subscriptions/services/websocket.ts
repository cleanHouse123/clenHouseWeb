import { io, Socket } from "socket.io-client";
import {
  PaymentWebSocketEvent,
  JoinPaymentRoomRequest,
  LeavePaymentRoomRequest,
} from "../types";

class WebSocketService {
  private subscriptionSocket: Socket | null = null;
  private orderSocket: Socket | null = null;
  private isSubscriptionConnected = false;
  private isOrderConnected = false;

  private getWebSocketUrl(type: "subscription" | "order"): string {
    const baseUrl = import.meta.env.VITE_API_URL;
    const wsPort = import.meta.env.VITE_WS_PORT || "3000";

    // –£–±–∏—Ä–∞–µ–º –ø—Ä–æ—Ç–æ–∫–æ–ª –∏ –¥–æ–±–∞–≤–ª—è–µ–º –ø–æ—Ä—Ç
    const host = baseUrl.replace(/^https?:\/\//, "");

    // –î–ª—è –ø–æ—Ä—Ç–∞ 3000 –≤—Å–µ–≥–¥–∞ –∏—Å–ø–æ–ª—å–∑—É–µ–º ws (–Ω–µ wss), —Ç–∞–∫ –∫–∞–∫ —Å–µ—Ä–≤–µ—Ä –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç SSL –Ω–∞ —ç—Ç–æ–º –ø–æ—Ä—Ç—É
    const protocol = "ws";

    // –í–æ–∑–≤—Ä–∞—â–∞–µ–º URL —Å namespace —Å–æ–≥–ª–∞—Å–Ω–æ WEBSOCKET_SETUP.md
    const namespace =
      type === "subscription" ? "subscription-payment" : "order-payment";
    return `${protocol}://${host}:${wsPort}/${namespace}`;
  }

  private log(message: string, data?: any) {
    const timestamp = new Date().toISOString();
    console.log(`[WebSocketService ${timestamp}] ${message}`, data || "");
  }

  // API –º–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–µ–π
  private async checkPaymentStatus(paymentId: string): Promise<any> {
    try {
      const baseUrl =
        import.meta.env.VITE_API_URL ||
        "https://cleanhouse123-cleanhouseapi-209c.twc1.net";
      const response = await fetch(`${baseUrl}/payment-status/${paymentId}`);

      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }

      const data = await response.json();
      this.log("–°—Ç–∞—Ç—É—Å –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–ª—É—á–µ–Ω", { paymentId, status: data.status });
      return data;
    } catch (error: any) {
      this.log("–û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞", {
        paymentId,
        error: error.message,
      });
      throw error;
    }
  }

  private async getPaymentType(
    paymentId: string
  ): Promise<"subscription" | "order" | null> {
    try {
      const baseUrl =
        import.meta.env.VITE_API_URL ||
        "https://cleanhouse123-cleanhouseapi-209c.twc1.net";
      const response = await fetch(
        `${baseUrl}/payment-status/${paymentId}/type`
      );

      if (!response.ok) {
        throw new Error(`HTTP ${response.status}: ${response.statusText}`);
      }

      const data = await response.json();
      this.log("–¢–∏–ø –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–ª—É—á–µ–Ω", {
        paymentId,
        type: data.type,
        exists: data.exists,
      });
      return data.exists ? data.type : null;
    } catch (error: any) {
      this.log("–û—à–∏–±–∫–∞ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç–∏–ø–∞ –ø–ª–∞—Ç–µ–∂–∞", {
        paymentId,
        error: error.message,
      });
      return null;
    }
  }

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫
  connectSubscription(): Socket {
    if (this.subscriptionSocket && this.isSubscriptionConnected) {
      this.log(
        "WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
      );
      return this.subscriptionSocket;
    }

    const wsUrl = this.getWebSocketUrl("subscription");
    this.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket –ø–æ–¥–ø–∏—Å–æ–∫", { url: wsUrl });

    this.subscriptionSocket = io(wsUrl, {
      transports: ["websocket"],
      upgrade: false,
      reconnection: true,
      reconnectionAttempts: 5,
      reconnectionDelay: 1000,
      reconnectionDelayMax: 5000,
    });

    this.subscriptionSocket.on("connect", () => {
      this.log("‚úÖ WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω", {
        id: this.subscriptionSocket?.id,
        connected: this.subscriptionSocket?.connected,
      });
      this.isSubscriptionConnected = true;
    });

    this.subscriptionSocket.on("disconnect", (reason) => {
      this.log("‚ùå WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –æ—Ç–∫–ª—é—á–µ–Ω", { reason });
      this.isSubscriptionConnected = false;
    });

    this.subscriptionSocket.on("connect_error", (error) => {
      this.log("üí• –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WebSocket –ø–æ–¥–ø–∏—Å–æ–∫", {
        error: error.message,
      });
      this.isSubscriptionConnected = false;
    });

    this.subscriptionSocket.on("reconnect_attempt", (attemptNumber) => {
      this.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –ø–æ–¥–ø–∏—Å–æ–∫ #${attemptNumber}`);
    });

    this.subscriptionSocket.on("reconnect_failed", () => {
      this.log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebSocket –ø–æ–¥–ø–∏—Å–æ–∫");
      this.isSubscriptionConnected = false;
    });

    this.subscriptionSocket.on("pong", () => {
      this.log("–ü–æ–ª—É—á–µ–Ω pong –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–¥–ø–∏—Å–æ–∫");
    });

    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è
    this.subscriptionSocket.onAny((eventName, ...args) => {
      this.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–¥–ø–∏—Å–æ–∫: ${eventName}`, args);
    });

    return this.subscriptionSocket;
  }

  // –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ WebSocket –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
  connectOrder(): Socket {
    if (this.orderSocket && this.isOrderConnected) {
      this.log(
        "WebSocket –∑–∞–∫–∞–∑–æ–≤ —É–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –≤–æ–∑–≤—Ä–∞—â–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–µ–µ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ"
      );
      return this.orderSocket;
    }

    const wsUrl = this.getWebSocketUrl("order");
    this.log("–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ WebSocket –∑–∞–∫–∞–∑–æ–≤", { url: wsUrl });

    this.orderSocket = io(wsUrl, {
      transports: ["websocket"],
      upgrade: false,
      reconnection: true,
      reconnectionAttempts: 5,
      reconnectionDelay: 1000,
      reconnectionDelayMax: 5000,
    });

    this.orderSocket.on("connect", () => {
      this.log("‚úÖ WebSocket –∑–∞–∫–∞–∑–æ–≤ —É—Å–ø–µ—à–Ω–æ –ø–æ–¥–∫–ª—é—á–µ–Ω", {
        id: this.orderSocket?.id,
        connected: this.orderSocket?.connected,
      });
      this.isOrderConnected = true;
    });

    this.orderSocket.on("disconnect", (reason) => {
      this.log("‚ùå WebSocket –∑–∞–∫–∞–∑–æ–≤ –æ—Ç–∫–ª—é—á–µ–Ω", { reason });
      this.isOrderConnected = false;
    });

    this.orderSocket.on("connect_error", (error) => {
      this.log("üí• –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è WebSocket –∑–∞–∫–∞–∑–æ–≤", {
        error: error.message,
      });
      this.isOrderConnected = false;
    });

    this.orderSocket.on("reconnect_attempt", (attemptNumber) => {
      this.log(`üîÑ –ü–æ–ø—ã—Ç–∫–∞ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∑–∞–∫–∞–∑–æ–≤ #${attemptNumber}`);
    });

    this.orderSocket.on("reconnect_failed", () => {
      this.log("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebSocket –∑–∞–∫–∞–∑–æ–≤");
      this.isOrderConnected = false;
    });

    this.orderSocket.on("pong", () => {
      this.log("–ü–æ–ª—É—á–µ–Ω pong –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–∫–∞–∑–æ–≤");
    });

    // –õ–æ–≥–∏—Ä—É–µ–º –≤—Å–µ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–±—ã—Ç–∏—è
    this.orderSocket.onAny((eventName, ...args) => {
      this.log(`–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ –æ—Ç —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–∫–∞–∑–æ–≤: ${eventName}`, args);
    });

    return this.orderSocket;
  }

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  connect(): Socket {
    return this.connectSubscription();
  }

  disconnect(): void {
    this.log("–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –≤—Å–µ—Ö WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–π");

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–µ–π
    this.stopAllPaymentStatusChecks();

    if (this.subscriptionSocket) {
      this.log("–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç WebSocket –ø–æ–¥–ø–∏—Å–æ–∫");
      this.subscriptionSocket.disconnect();
      this.subscriptionSocket = null;
      this.isSubscriptionConnected = false;
    }

    if (this.orderSocket) {
      this.log("–û—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç WebSocket –∑–∞–∫–∞–∑–æ–≤");
      this.orderSocket.disconnect();
      this.orderSocket = null;
      this.isOrderConnected = false;
    }

    this.log("–í—Å–µ WebSocket —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã");
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–Ω–∞—Ç–∞–º–∏ –ø–æ–¥–ø–∏—Å–æ–∫
  joinPaymentRoom(data: JoinPaymentRoomRequest): void {
    this.log("–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–¥–ø–∏—Å–∫–∏", data);

    if (this.subscriptionSocket && this.isSubscriptionConnected) {
      this.log(
        "WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º join_payment_room",
        data
      );
      this.subscriptionSocket.emit("join_payment_room", {
        userId: data.userId,
        paymentId: data.paymentId,
      });
    } else {
      this.log("WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è...");
      this.connectSubscription();
      // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
      setTimeout(() => {
        if (this.subscriptionSocket && this.isSubscriptionConnected) {
          this.log("–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–¥–ø–∏—Å–∫–∏", data);
          this.subscriptionSocket.emit("join_payment_room", {
            userId: data.userId,
            paymentId: data.paymentId,
          });
        } else {
          this.log(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏"
          );
        }
      }, 1000);
    }
  }

  leavePaymentRoom(data: LeavePaymentRoomRequest): void {
    this.log("–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –∫–æ–º–Ω–∞—Ç—ã –ø–ª–∞—Ç–µ–∂–∞ –ø–æ–¥–ø–∏—Å–∫–∏", data);

    if (this.subscriptionSocket && this.isSubscriptionConnected) {
      this.log(
        "WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –ø–æ–¥–∫–ª—é—á–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º leave_payment_room",
        data
      );
      this.subscriptionSocket.emit("leave_payment_room", {
        userId: data.userId,
        paymentId: data.paymentId,
      });
    } else {
      this.log(
        "WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç –∫–æ–º–Ω–∞—Ç—ã"
      );
    }
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∫–æ–º–Ω–∞—Ç–∞–º–∏ –∑–∞–∫–∞–∑–æ–≤
  joinOrderPaymentRoom(paymentId: string, userId: string): void {
    const data = { paymentId, userId };
    this.log("–ü–æ–ø—ã—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ–º–Ω–∞—Ç–µ –ø–ª–∞—Ç–µ–∂–∞ –∑–∞–∫–∞–∑–∞", data);

    if (this.orderSocket && this.isOrderConnected) {
      this.log(
        "WebSocket –∑–∞–∫–∞–∑–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º join_order_payment_room",
        data
      );
      this.orderSocket.emit("join_order_payment_room", {
        userId,
        paymentId,
      });
    } else {
      this.log("WebSocket –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø—ã—Ç–∞–µ–º—Å—è –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è...");
      this.connectOrder();
      // –ü–æ–≤—Ç–æ—Ä–Ω–∞—è –ø–æ–ø—ã—Ç–∫–∞ —á–µ—Ä–µ–∑ –Ω–µ–±–æ–ª—å—à—É—é –∑–∞–¥–µ—Ä–∂–∫—É
      setTimeout(() => {
        if (this.orderSocket && this.isOrderConnected) {
          this.log("–ü–æ–≤—Ç–æ—Ä–Ω–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –∫–æ–º–Ω–∞—Ç–µ –ø–ª–∞—Ç–µ–∂–∞ –∑–∞–∫–∞–∑–∞", data);
          this.orderSocket.emit("join_order_payment_room", {
            userId,
            paymentId,
          });
        } else {
          this.log(
            "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ WebSocket –∑–∞–∫–∞–∑–æ–≤ –ø–æ—Å–ª–µ –ø–æ–≤—Ç–æ—Ä–Ω–æ–π –ø–æ–ø—ã—Ç–∫–∏"
          );
        }
      }, 1000);
    }
  }

  leaveOrderPaymentRoom(paymentId: string, userId: string): void {
    const data = { paymentId, userId };
    this.log("–ü–æ–ø—ã—Ç–∫–∞ –æ—Ç–∫–ª—é—á–µ–Ω–∏—è –æ—Ç –∫–æ–º–Ω–∞—Ç—ã –ø–ª–∞—Ç–µ–∂–∞ –∑–∞–∫–∞–∑–∞", data);

    if (this.orderSocket && this.isOrderConnected) {
      this.log(
        "WebSocket –∑–∞–∫–∞–∑–æ–≤ –ø–æ–¥–∫–ª—é—á–µ–Ω, –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º leave_order_payment_room",
        data
      );
      this.orderSocket.emit("leave_order_payment_room", {
        userId,
        paymentId,
      });
    } else {
      this.log(
        "WebSocket –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –Ω–µ–≤–æ–∑–º–æ–∂–Ω–æ –æ—Ç–∫–ª—é—á–∏—Ç—å—Å—è –æ—Ç –∫–æ–º–Ω–∞—Ç—ã"
      );
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫
  onSubscriptionPaymentSuccess(
    callback: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ payment_success –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫");
    if (this.subscriptionSocket) {
      this.subscriptionSocket.on("payment_success", (data) => {
        this.log("üéâ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ payment_success –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏", data);
        callback(data);
      });
    } else {
      this.log(
        "WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
      );
    }
  }

  onSubscriptionPaymentError(
    callback: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ payment_error –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫");
    if (this.subscriptionSocket) {
      this.subscriptionSocket.on("payment_error", (data) => {
        this.log("üí• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ payment_error –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏", data);
        callback(data);
      });
    } else {
      this.log(
        "WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
      );
    }
  }

  onSubscriptionPaymentStatusUpdate(callback: (data: any) => void): void {
    this.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ payment_status_update –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫");
    if (this.subscriptionSocket) {
      this.subscriptionSocket.on("payment_status_update", (data) => {
        this.log("–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ payment_status_update –¥–ª—è –ø–æ–¥–ø–∏—Å–∫–∏", data);
        callback(data);
      });
    } else {
      this.log(
        "WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
      );
    }
  }

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π –¥–ª—è –∑–∞–∫–∞–∑–æ–≤
  onOrderPaymentSuccess(
    callback: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ order_payment_success –¥–ª—è –∑–∞–∫–∞–∑–æ–≤");
    if (this.orderSocket) {
      this.orderSocket.on("order_payment_success", (data) => {
        this.log("üéâ –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ order_payment_success –¥–ª—è –∑–∞–∫–∞–∑–∞", data);
        callback(data);
      });
    } else {
      this.log(
        "WebSocket –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
      );
    }
  }

  onOrderPaymentError(
    callback: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ order_payment_error –¥–ª—è –∑–∞–∫–∞–∑–æ–≤");
    if (this.orderSocket) {
      this.orderSocket.on("order_payment_error", (data) => {
        this.log("üí• –ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ order_payment_error –¥–ª—è –∑–∞–∫–∞–∑–∞", data);
        callback(data);
      });
    } else {
      this.log(
        "WebSocket –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
      );
    }
  }

  onOrderPaymentStatusUpdate(callback: (data: any) => void): void {
    this.log("–†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ order_payment_status_update –¥–ª—è –∑–∞–∫–∞–∑–æ–≤");
    if (this.orderSocket) {
      this.orderSocket.on("order_payment_status_update", (data) => {
        this.log(
          "–ü–æ–ª—É—á–µ–Ω–æ —Å–æ–±—ã—Ç–∏–µ order_payment_status_update –¥–ª—è –∑–∞–∫–∞–∑–∞",
          data
        );
        callback(data);
      });
    } else {
      this.log(
        "WebSocket –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–µ –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω"
      );
    }
  }

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  onPaymentSuccess(
    callback: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.onSubscriptionPaymentSuccess(callback);
  }

  onPaymentError(
    callback: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.onSubscriptionPaymentError(callback);
  }

  onPaymentStatusUpdate(callback: (data: any) => void): void {
    this.onSubscriptionPaymentStatusUpdate(callback);
  }

  // –ú–µ—Ç–æ–¥—ã –æ—Ç–ø–∏—Å–∫–∏ –æ—Ç —Å–æ–±—ã—Ç–∏–π
  offSubscriptionPaymentSuccess(
    callback?: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.log("–û—Ç–ø–∏—Å–∫–∞ –æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ payment_success –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫");
    if (this.subscriptionSocket) {
      this.subscriptionSocket.off("payment_success", callback);
    } else {
      this.log("WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ—Ç–ø–∏—Å–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞");
    }
  }

  offSubscriptionPaymentError(
    callback?: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.log("–û—Ç–ø–∏—Å–∫–∞ –æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ payment_error –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫");
    if (this.subscriptionSocket) {
      this.subscriptionSocket.off("payment_error", callback);
    } else {
      this.log("WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ—Ç–ø–∏—Å–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞");
    }
  }

  offSubscriptionPaymentStatusUpdate(callback?: (data: any) => void): void {
    this.log("–û—Ç–ø–∏—Å–∫–∞ –æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ payment_status_update –¥–ª—è –ø–æ–¥–ø–∏—Å–æ–∫");
    if (this.subscriptionSocket) {
      this.subscriptionSocket.off("payment_status_update", callback);
    } else {
      this.log("WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ—Ç–ø–∏—Å–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞");
    }
  }

  offOrderPaymentSuccess(
    callback?: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.log("–û—Ç–ø–∏—Å–∫–∞ –æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ order_payment_success –¥–ª—è –∑–∞–∫–∞–∑–æ–≤");
    if (this.orderSocket) {
      this.orderSocket.off("order_payment_success", callback);
    } else {
      this.log("WebSocket –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ—Ç–ø–∏—Å–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞");
    }
  }

  offOrderPaymentError(
    callback?: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.log("–û—Ç–ø–∏—Å–∫–∞ –æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ order_payment_error –¥–ª—è –∑–∞–∫–∞–∑–æ–≤");
    if (this.orderSocket) {
      this.orderSocket.off("order_payment_error", callback);
    } else {
      this.log("WebSocket –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ—Ç–ø–∏—Å–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞");
    }
  }

  offOrderPaymentStatusUpdate(callback?: (data: any) => void): void {
    this.log("–û—Ç–ø–∏—Å–∫–∞ –æ—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ order_payment_status_update –¥–ª—è –∑–∞–∫–∞–∑–æ–≤");
    if (this.orderSocket) {
      this.orderSocket.off("order_payment_status_update", callback);
    } else {
      this.log("WebSocket –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω, –æ—Ç–ø–∏—Å–∫–∞ –Ω–µ–≤–æ–∑–º–æ–∂–Ω–∞");
    }
  }

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–µ –º–µ—Ç–æ–¥—ã –æ—Ç–ø–∏—Å–∫–∏ (–¥–ª—è –æ–±—Ä–∞—Ç–Ω–æ–π —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏)
  offPaymentSuccess(
    callback?: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.offSubscriptionPaymentSuccess(callback);
  }

  offPaymentError(
    callback?: (data: PaymentWebSocketEvent["data"]) => void
  ): void {
    this.offSubscriptionPaymentError(callback);
  }

  offPaymentStatusUpdate(callback?: (data: any) => void): void {
    this.offSubscriptionPaymentStatusUpdate(callback);
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–æ–∫–µ—Ç–æ–≤
  getSubscriptionSocket(): Socket | null {
    return this.subscriptionSocket;
  }

  getOrderSocket(): Socket | null {
    return this.orderSocket;
  }

  getSocket(): Socket | null {
    return this.subscriptionSocket;
  }

  // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
  isSubscriptionSocketConnected(): boolean {
    return this.isSubscriptionConnected;
  }

  isOrderSocketConnected(): boolean {
    return this.isOrderConnected;
  }

  isSocketConnected(): boolean {
    return this.isSubscriptionConnected;
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–∫–∞–∑–æ–≤
  pingOrderServer(): void {
    this.log("–ü–æ–ø—ã—Ç–∫–∞ –ø–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–∞ –∑–∞–∫–∞–∑–æ–≤");
    if (this.orderSocket && this.isOrderConnected) {
      this.log("–û—Ç–ø—Ä–∞–≤–∫–∞ ping –Ω–∞ —Å–µ—Ä–≤–µ—Ä –∑–∞–∫–∞–∑–æ–≤");
      this.orderSocket.emit("ping");
    } else {
      this.log("WebSocket –∑–∞–∫–∞–∑–æ–≤ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø–∏–Ω–≥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω");
    }
  }

  // –ú–µ—Ç–æ–¥ –¥–ª—è –ø–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–¥–ø–∏—Å–æ–∫
  pingSubscriptionServer(): void {
    this.log("–ü–æ–ø—ã—Ç–∫–∞ –ø–∏–Ω–≥–∞ —Å–µ—Ä–≤–µ—Ä–∞ –ø–æ–¥–ø–∏—Å–æ–∫");
    if (this.subscriptionSocket && this.isSubscriptionConnected) {
      this.log("–û—Ç–ø—Ä–∞–≤–∫–∞ ping –Ω–∞ —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–ø–∏—Å–æ–∫");
      this.subscriptionSocket.emit("ping");
    } else {
      this.log("WebSocket –ø–æ–¥–ø–∏—Å–æ–∫ –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω, –ø–∏–Ω–≥ –Ω–µ–≤–æ–∑–º–æ–∂–µ–Ω");
    }
  }

  // –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –º–µ—Ç–æ–¥ –ø–∏–Ω–≥–∞
  ping(): void {
    this.log("–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ø–∏–Ω–≥ - –ø–∏–Ω–≥—É–µ–º —Å–µ—Ä–≤–µ—Ä –ø–æ–¥–ø–∏—Å–æ–∫");
    this.pingSubscriptionServer();
  }

  // –ú–µ—Ç–æ–¥—ã –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–µ–π
  private paymentStatusIntervals: Map<string, NodeJS.Timeout> = new Map();

  startPaymentStatusCheck(
    paymentId: string,
    callback: (status: any) => void,
    intervalMs: number = 5000
  ): void {
    this.log("–ó–∞–ø—É—Å–∫ –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–π –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞", {
      paymentId,
      intervalMs,
    });

    // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â—É—é –ø—Ä–æ–≤–µ—Ä–∫—É –µ—Å–ª–∏ –µ—Å—Ç—å
    this.stopPaymentStatusCheck(paymentId);

    const interval = setInterval(async () => {
      try {
        const status = await this.checkPaymentStatus(paymentId);
        callback(status);

        // –ï—Å–ª–∏ –ø–ª–∞—Ç–µ–∂ –∑–∞–≤–µ—Ä—à–µ–Ω (paid, success –∏–ª–∏ failed), –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É
        if (
          status.status === "paid" ||
          status.status === "success" ||
          status.status === "failed"
        ) {
          this.log("–ü–ª–∞—Ç–µ–∂ –∑–∞–≤–µ—Ä—à–µ–Ω, –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É", {
            paymentId,
            status: status.status,
          });
          this.stopPaymentStatusCheck(paymentId);
        }
      } catch (error: any) {
        this.log("–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞", {
          paymentId,
          error: error.message,
        });
      }
    }, intervalMs);

    this.paymentStatusIntervals.set(paymentId, interval);
  }

  stopPaymentStatusCheck(paymentId: string): void {
    this.log("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–∞", { paymentId });

    const interval = this.paymentStatusIntervals.get(paymentId);
    if (interval) {
      clearInterval(interval);
      this.paymentStatusIntervals.delete(paymentId);
    }
  }

  stopAllPaymentStatusChecks(): void {
    this.log("–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö –ø—Ä–æ–≤–µ—Ä–æ–∫ —Å—Ç–∞—Ç—É—Å–∞ –ø–ª–∞—Ç–µ–∂–µ–π");

    this.paymentStatusIntervals.forEach((interval, paymentId) => {
      clearInterval(interval);
      this.log("–û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞", { paymentId });
    });

    this.paymentStatusIntervals.clear();
  }

  // –ü—É–±–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞
  async getPaymentStatus(paymentId: string): Promise<any> {
    return await this.checkPaymentStatus(paymentId);
  }

  async getPaymentTypeInfo(
    paymentId: string
  ): Promise<"subscription" | "order" | null> {
    return await this.getPaymentType(paymentId);
  }
}

export const webSocketService = new WebSocketService();
