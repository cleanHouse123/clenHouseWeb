import { useMutation } from '@tanstack/react-query';
import { toast } from 'sonner';
import { authApi } from '../api';
import { SendSmsRequest } from '../types';

export const useSendSms = () => {
    return useMutation({
        mutationFn: (data: SendSmsRequest) => authApi.sendSms(data),
        onSuccess: (_, variables) => {
            const isDev = variables.isDev;
            toast.success('SMS –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!', {
                description: isDev
                    ? '–†–µ–∂–∏–º —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏: –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –≤ –∫–æ–Ω—Å–æ–ª—å'
                    : '–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –≤–∞—à —Ç–µ–ª–µ—Ñ–æ–Ω –∏ –≤–≤–µ–¥–∏—Ç–µ –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –∫–æ–¥',
                duration: 5000,
            });

            if (isDev) {
                console.log('üîß DEV MODE: SMS –∫–æ–¥ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –¥–ª—è –Ω–æ–º–µ—Ä–∞', variables.phoneNumber);
            }
        },
        onError: (error: any) => {
            console.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS:', error);

            const errorMessage = error?.response?.data?.message ||
                error?.message ||
                '–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ SMS –∫–æ–¥–∞';

            toast.error('–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ SMS', {
                description: errorMessage,
                duration: 5000,
            });
        },
    });
};
